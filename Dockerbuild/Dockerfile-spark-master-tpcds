#
# Copyright (c) 2020, NVIDIA CORPORATION. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

FROM ubuntu:18.04 

RUN apt-get update && apt-get install -y --no-install-recommends openjdk-8-jdk openjdk-8-jre scala python python-pip python3 python3-pip wget vim
RUN rm -r /usr/lib/python*/ensurepip && \
    pip install --upgrade pip setuptools && \
    rm -r /root/.cache && rm -rf /var/cache/apt/*

ENV JAVA_HOME /usr/lib/jvm/java-1.8.0-openjdk-amd64
ENV PATH $PATH:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/bin:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin

# Before building the docker image, first either download Apache Spark 3.0+ from 
# http://spark.apache.org/downloads.html or build and make a Spark distribution following
# the instructions in http://spark.apache.org/docs/3.0.1/building-spark.html (3.0.0 can 
# be used as well).  
# If this docker file is being used in the context of building your images from a Spark
# distribution, the docker build command should be invoked from the top level directory
# of the Spark distribution. E.g.:
# docker build -t spark:3.0.1 -f kubernetes/dockerfiles/spark/Dockerfile .

RUN set -ex && \
    ln -s /lib /lib64 && \
    mkdir -p /opt/spark && \
    mkdir -p /opt/spark/logs && \
    mkdir -p /opt/spark/conf && \
    mkdir -p /opt/spark/jars && \
    mkdir -p /opt/tpch && \
    mkdir -p /opt/spark/work && \
    touch /opt/spark/RELEASE && \
    rm /bin/sh && \
    ln -sv /bin/bash /bin/sh && \
    echo "auth required pam_wheel.so use_uid" >> /etc/pam.d/su && \
    chgrp root /etc/passwd && chmod ug+rw /etc/passwd

RUN mkdir /opt/spark/python

COPY spark/jars /opt/spark/jars

RUN set -ex && \
    wget -P /opt/spark/jars -c https://repo1.maven.org/maven2/com/amazonaws/aws-java-sdk-s3/1.11.687/aws-java-sdk-s3-1.11.687.jar && \
    wget -P /opt/spark/jars -c https://storage.googleapis.com/hadoop-lib/gcs/gcs-connector-hadoop3-latest.jar 

COPY spark/bin /opt/spark/bin
COPY spark/sbin /opt/spark/sbin
COPY spark/data /opt/spark/data
COPY spark/python/pyspark /opt/spark/python/pyspark
COPY spark/python/lib /opt/spark/python/lib

ENV SPARK_HOME /opt/spark

WORKDIR /data/tpcds

ENTRYPOINT $SPARK_HOME/bin/spark-class org.apache.spark.deploy.master.Master
